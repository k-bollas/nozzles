import os
import sys
script_folder = os.path.dirname(os.path.abspath(__file__))
parent_folder = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
sys.path.insert(0, script_folder)
from figure_properties import new_figure
import matplotlib.pyplot as plt
import numpy as np
from scipy.signal import savgol_filter


x40 = np.array([13.48693527, 11.93576076, 10.74251565, 9.11475885, 8.100499127, 7.290673832, 6.673330234, 6.134050238, 5.42855398, 4.927193059, 4.415965834, 3.762657232, 3.206000675, 2.813461087, 2.387152152, 2.068559945])
y40 = np.array([0.399926514, 0.394493275, 0.387363603, 0.380362786, 0.375195331, 0.368414431, 0.365070077, 0.363409302, 0.358472171, 0.356841411, 0.353602113, 0.350392221, 0.347211467, 0.342494392, 0.342494392, 0.342494392])
x50 = np.array([40.84522687, 28.31077832, 23.52026308, 18.1132667, 14.36678985, 11.44333102, 9.467014944, 8.272953849, 6.931232969, 5.905809701, 4.684275248, 3.715398178, 3.179099207, 2.708775627, 2.327563373, 1.933712392, 1.711310096, 1.60650561, 1.533750926, 1.514486982, 1.533750926, 1.60650561, 1.733077587, 1.974879958, 2.427723144, 3.343961384, 5.074671452, 8.342959405, 14.48836132, ])
y50 = np.array([0.688055962, 0.622385414, 0.600091979, 0.573344752, 0.552807921, 0.530581955, 0.513914758, 0.500045935, 0.488774917, 0.482134619, 0.471267322, 0.45854941, 0.452319743, 0.444144975, 0.44617471, 0.456463379, 0.469123435, 0.488774917, 0.513914758, 0.55029309, 0.591939372, 0.639647334, 0.691200368, 0.788914072, 0.946755036, 1.326698619, 2.141376682, 3.734884945, 7.103708772, ])
x55 = np.array([41.1908583, 35.69347665, 30.54130348, 26.57696246, 23.42137624, 19.8724585, 17.07576149, 13.31753908, 11.1576793, 9.506985403, 8.066441994, 7.108681933, 6.479392157, 5.567532324, 5.053335883, 4.251653124, 3.668732699, 3.288078641, 2.997004389, 2.76644382, 2.674753349, 2.652309563, 2.720212284, 2.885489506, 3.060808798, 3.246780304, 3.458592289, 3.684222368, 3.941141843, 4.163024846, 4.434610378, 4.704052616, 4.989865878, 5.315392492, 5.686061716, 6.082579581, 6.452150685, 6.902091812, 7.604406307, 8.342959405, 9.269669297, 10.56299167, 13.09498249, 15.36865883, 17.88576369, 20.46727145, 23.92000316, 28.07322331, 33.64899905, 41.36476924, ])
y55 = np.array([0.837090238, 0.810794681, 0.767623947, 0.730073083, 0.707139261, 0.688055962, 0.675620736, 0.660392269, 0.651420447, 0.64550705, 0.636737453, 0.63384081, 0.630957344, 0.628086996, 0.628086996, 0.630957344, 0.636737453, 0.64550705, 0.660392269, 0.684925861, 0.736761176, 0.799779553, 0.852497412, 0.917014573, 0.986414405, 1.061066429, 1.13100714, 1.216601969, 1.326698619, 1.420611243, 1.521171632, 1.643772022, 1.784370968, 1.910680709, 2.045931501, 2.210825451, 2.389009198, 2.593351509, 2.906473293, 3.272287739, 3.634093021, 4.341339627, 5.604215817, 6.694876565, 8.03434534, 9.510816921, 11.41368132, 13.88590716, 17.12629287, 21.9075625, ])
x60 = np.array([51.28006781, 43.87804888, 28.31077832, 24.53238768, 21.16888896, 18.18974229, 15.62985782, 12.87614517, 10.92509074, 9.11475885, 7.766299514, 6.56180861, 5.807114527, 5.160918344, 4.605993796, 4.145522136, 3.924572001, 3.842761926, 3.875279294, 4.025046367, 4.269603928, 4.927193059, 5.686061716, 7.414582929, 10.12719782, 14.30638719, 21.07988807, 36.60727806, 44.43616809, ])
y60 = np.array([1.105514279, 1.061066429, 0.951081692, 0.908690194, 0.876141511, 0.848619235, 0.833282151, 0.807106218, 0.799779553, 0.781752551, 0.767623947, 0.75375069, 0.75375069, 0.750321731, 0.767623947, 0.792519398, 0.8447587, 0.908690194, 0.986414405, 1.100485079, 1.211067409, 1.493679518, 1.833860671, 2.546481903, 3.786324414, 5.578721144, 8.882083497, 16.51284035, 20.27359157, ])
x65 = np.array([44.43616809, 38.02203154, 31.19150934, 26.24315525, 21.80250605, 18.26654077, 15.49870809, 12.82200967, 10.83341858, 9.506985403, 8.203535707, 7.352367356, 6.844176538, 6.398010856, 6.108260696, 5.856254204, 5.638350119, 5.42855398, 5.383003124, 5.405730573, 5.520815304, 5.686061716, 5.905809701, 6.291090243, 6.78674723, 7.229497976, 7.63651269, 8.134700051, 8.701973862, ])
y65 = np.array([1.285022971, 1.227747083, 1.157087859, 1.105514279, 1.061066429, 1.032431832, 1.004569985, 0.973013379, 0.951081692, 0.938160682, 0.925415211, 0.921205316, 0.925415211, 0.955428121, 0.981927013, 1.013772705, 1.061066429, 1.141368132, 1.222161821, 1.314655253, 1.394936555, 1.486884478, 1.592136131, 1.752122055, 1.95474049, 2.160993524, 2.324537912, 2.523365715, 2.751718226, ])
x70 = np.array([43.6935713, 37.07291464, 26.46522427, 21.80250605, 18.3436635, 14.98502194, 12.44938074, 10.65237548, 8.962437196, 8.066441994, 7.290673832, 6.931232969, 6.902091812, 7.049033167, 7.445887863, 7.965127314, 8.413557347, 9.038277145, 9.750377122, 10.74251565, 12.13861572, 15.76211734, 20.64046506, 28.43030858, 48.54691683, ])
y70 = np.array([1.666411209, 1.621440401, 1.521171632, 1.473386993, 1.433625257, 1.382273746, 1.332761612, 1.30867463, 1.27917715, 1.27917715, 1.302721213, 1.375985513, 1.486884478, 1.621440401, 1.82551808, 1.990718723, 2.160993524, 2.378141128, 2.629068975, 2.959968768, 3.440595867, 4.755845338, 6.514204469, 9.510816921, 17.4415131, ])
x75 = np.array([22.17305189, 19.45820509, 17.36597365, 15.76211734, 14.18634267, 12.82200967, 12.08758103, 11.29960255, 10.9712173, 10.92509074, 11.20478788, 11.88557894, 12.60773415, 13.37376674, 14.36678985, 15.69584827, 17.07576149, 18.57699089, 20.46727145, 22.17305189, 24.22426038, 28.07322331, ])
y75 = np.array([2.027359157, 1.981662554, 1.945847994, 1.928184178, 1.919412491, 1.910680709, 1.910680709, 1.990718723, 2.083588161, 2.241274497, 2.378141128, 2.558119287, 2.751718226, 2.959968768, 3.213147727, 3.53602113, 3.873636032, 4.204964912, 4.648648754, 5.139147576, 5.629827, 6.573880151, ])
x80 = np.array([24.94932939, 23.02996898, 21.25826562, 20.2102021, 19.37639647, 19.21380963, 19.45820509, 19.95636153, 21.16888896, ])
y80 = np.array([2.85394464, 2.78961683, 2.739200122, 2.739200122, 2.8280374, 2.959968768, 3.126435727, 3.302264693, 3.53602113, ])
y50_smooth = savgol_filter(y50, window_length=10, polyorder=4)  # Adjust window_length
from scipy.ndimage import gaussian_filter1d

y50_smooth = gaussian_filter1d(y50, sigma=2)  # Adjust sigma for more/less smoothing

p50 = np.polyfit(x50,y50,9)
fig, ax = new_figure(latex_style=True, box=True)
scale = 1
fig.set_size_inches(6.4*scale-1, 4.8*scale)

ax.plot(x40,y40,'-k', zorder=4, lw=1.5)
ax.plot(x50,y50,'-k', zorder=4, lw=1.5)
ax.plot(x55,y55,'-k', zorder=4, lw=1.5)
ax.plot(x60,y60,'-k', zorder=4, lw=1.5)
ax.plot(x65,y65,'-k', zorder=4, lw=1.5)
ax.plot(x70,y70,'-k', zorder=4, lw=1.5)
ax.plot(x75,y75,'-k', zorder=4, lw=1.5)
ax.plot(x80,y80,'-k', zorder=4, lw=1.5)
ax.set_xscale('log')
ax.set_yscale('log')
ax.set_xlabel(r'Dimensionless length, $N/W_{1}$')
ax.set_ylabel(r'Area Ratio - 1, $AR - 1$')
ax.set_xticks([2,5,10,50])
ax.set_xticklabels([2,5,10,50])
ax.set_yticks([1,2,5,10])
ax.set_yticklabels([1,2,5,10])
ax.grid(lw=1)
fig.tight_layout(pad=0.5)


fig, ax = new_figure(latex_style=True, box=True)
scale = 1
fig.set_size_inches(6.4*scale-1, 4.8*scale)

ax.plot(x40,y40,'-k', zorder=4, lw=1.5)
ax.plot(x50,y50,'-k', zorder=4, lw=1.5)
ax.plot(x55,y55,'-k', zorder=4, lw=1.5)
ax.plot(x60,y60,'-k', zorder=4, lw=1.5)
ax.plot(x65,y65,'-k', zorder=4, lw=1.5)
ax.plot(x70,y70,'-k', zorder=4, lw=1.5)
ax.plot(x75,y75,'-k', zorder=4, lw=1.5)
ax.plot(x80,y80,'-k', zorder=4, lw=1.5)
ax.scatter(np.min(x50), y50[np.where(x50==np.min(x50))], s=60, edgecolor='k', facecolor='r', zorder=6)
ax.scatter(np.min(x55), y55[np.where(x55==np.min(x55))], s=60, edgecolor='k', facecolor='r', zorder=6)
ax.scatter(np.min(x60), y60[np.where(x60==np.min(x60))], s=60, edgecolor='k', facecolor='r', zorder=6)
ax.scatter(np.min(x65), y65[np.where(x65==np.min(x65))], s=60, edgecolor='k', facecolor='r', zorder=6)
ax.scatter(np.min(x70), y70[np.where(x70==np.min(x70))], s=60, edgecolor='k', facecolor='r', zorder=6)
ax.scatter(np.min(x75), y75[np.where(x75==np.min(x75))], s=60, edgecolor='k', facecolor='r', zorder=6)
ax.scatter(np.min(x80), y80[np.where(x80==np.min(x80))], s=60, edgecolor='k', facecolor='r', zorder=6)

ax.scatter(x50[np.where(y50==np.min(y50))], np.min(y50), s=60, edgecolor='k', facecolor='b', zorder=6)
ax.scatter(x55[np.where(y55==np.min(y55))[0][0]], np.min(y55), s=60, edgecolor='k', facecolor='b', zorder=6)
ax.scatter(x60[np.where(y60==np.min(y60))], np.min(y60), s=60, edgecolor='k', facecolor='b', zorder=6)
ax.scatter(x65[np.where(y65==np.min(y65))], np.min(y65), s=60, edgecolor='k', facecolor='b', zorder=6)
ax.scatter(x70[np.where(y70==np.min(y70))[0][0]], np.min(y70), s=60, edgecolor='k', facecolor='b', zorder=6)
ax.scatter(x75[np.where(y75==np.min(y75))[0][0]], np.min(y75), s=60, edgecolor='k', facecolor='b', zorder=6)
ax.scatter(x80[np.where(y80==np.min(y80))[0][0]], np.min(y80), s=60, edgecolor='k', facecolor='b', zorder=6)

ax.set_xscale('log')
ax.set_yscale('log')
ax.set_xlabel(r'Dimensionless length, $N/W_{1}$')
ax.set_ylabel(r'Area Ratio, $AR$')
ax.set_xticks([2,5,10,50])
ax.set_xticklabels([2,5,10,50])
ax.set_yticks([1,2,5,10])
ax.set_yticklabels([1,2,5,10])
ax.grid(lw=1)
fig.tight_layout(pad=0.5)
fig.savefig('fig2.svg', transparent=True)
plt.show()